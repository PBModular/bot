yes_btn: Yes ✅
no_btn: No ❌
try_again_btn: Try Again 🔄
abort_btn: Abort ❌

help:
  header: |
    Welcome to PBModular! Thank you for using it.
    Get help for commands within specific modules using:
    <code>/mod_help <ModuleName></code> or
    <code>/mhelp <ModuleName></code>

    📥 <b>Loaded modules:</b>

  footer: |
    Found it useful? Consider starring us on GitHub 😊
    https://github.com/PBModular/bot

mod_help:
  args_err: |
    <b>Usage Example:</b>
    <code>/mod_help <ModuleName></code>
    <code>/mhelp <ModuleName></code>

  module_found: "\U0001F4C4 <b>Help for module <code>{0}</code>:</b>"
  module_not_found: "❌ Help information for the <b>{0}</b> module is not available."

info:
  args_err: |
    <b>Error: Module name not specified!</b>

    Usage Example:
    <code>/mod_info BestModule</code>

  not_found: "❌ Error: The requested module could not be found."

  header: |
    📄 <b>Module Information: <code>{name}</code></b>
    <b>Author:</b> {author}
    <b>Version:</b> {version}

  src_url: |
    <b>Source code link:</b>
    {url}

  description: |
    <b>Description:</b>
    {description}

install:
  perms:
    use_loader: Access to module loader ⚠️
    use_db: Database usage
    require_db: Requires database access

  args_err: |
    <b>Error: Module URL not provided!</b>

    Usage Example:
    <code>/mod_install https://github.com/SanyaPilot/best_module</code>

  start: |
    🛠 <b>Installing module <code>{0}</code>...</b>

    Please wait...

  confirm: |
    <b>Are you sure you want to install the module <code>{name}</code>?</b>
    <b>Author:</b> {author}
    <b>Version:</b> {version}

  confirm_perms: |
    Requested permissions:
    {perms}

  confirm_warn_perms: "<b>Warning!</b> This module requests potentially dangerous permissions (marked with ⚠)."

  down_reqs_next: |
    🛠 Module <code>{0}</code> downloaded!
    Installing dependencies...

  down_end_next: |
    🛠 Module <code>{0}</code> downloaded!
    Loading module...

  reqs_ok: |
    🛠 Dependencies for module <code>{0}</code> installed!
    Loading module...

  end_reqs: |
    ✅ Module <code>{0}</code> installed successfully!

    <b>Required Python dependencies were installed:</b>
    {1}

    See usage with:
    <code>/help {0}</code>

  end: |
    ✅ Module <code>{0}</code> installed successfully!

    See usage with:
    <code>/help {0}</code>

  aborted: "❌ Installation aborted."

  down_err: |
    ❌ <b>Failed to download module <code>{0}</code>!</b>

    Output from `git clone`:
    <code>{1}</code>

  reqs_err: |
    ❌ <b>Failed to install dependencies for module <code>{0}</code>!</b>

    Output from `pip install`:
    <code>{1}</code>

    If this error seems unrelated to your setup, please contact the developer with:
    - Your Python version
    - Bot version
    - The output above

  load_err: |
    ❌ <b>Failed to load module <code>{0}</code>!</b>

    Check the bot logs for detailed error information. If needed, contact the developer with:
    - Your Python version
    - Bot version
    - The relevant error log

ping:
  response: "Pong! Request processed in {time}."

uninstall:
  args_err: |
    <b>Error: Module name not specified!</b>

    Usage Example:
    <code>/mod_uninstall BestModule</code>

  not_found: "❌ Module <code>{0}</code> not found!"
  ok: "✅ Module <code>{0}</code> uninstalled successfully!"
  err: "❌ Error uninstalling module <code>{0}</code>!"

update:
  args_err: |
    <b>Error: Module name not specified!</b>

    Usage Example:
    <code>/mod_update BestModule</code>

  confirm: |
    <b>Are you sure you want to update the module <code>{name}</code>?</b>
    <b>Author:</b> {author}
    <b>Current Version:</b> {version}

  err: |
    ❌ <b>Failed to update module <code>{name}</code>!</b>

    Output from <code>git pull</code>:
    {out}

  ok: |
    ✅ Module <code>{name}</code> updated successfully!

    <b>Version:</b> {old_ver} → {new_ver}
    <b>Repository URL:</b> {url}

  no_updates_found: "✅ Module is already up-to-date."
  reqs: "<b>Required Python dependencies for the updated module:</b>"
  abort: "❌ Update aborted."
  info_file_missing: "❌ Error: Missing info.yaml file. Aborting update..."

log_file:
  answer_caption_file: 📁 <b>Here is the current log file</b>
  answer_log_cleared: ♻️ <b>Log file cleared successfully.</b>

allow_cmd:
  args_err: |
    <b>Error: Command or role not specified!</b>

    Usage Example:
    <code>/allow_cmd best_command <role></code>

    Where <role> is one of:
    <code>chat_owner</code> - Chat owner
    <code>chat_admins</code> - Chat administrators
    <code>owner</code> - Bot owner
    <code>all</code> - All users
    Or another custom role name / @username.

  command_not_found: "❌ Error: The specified command was not found."
  ok: |
    ✅ Permissions updated for command <code>{command}</code>.
    Allowed roles: <code>{roles}</code>

reset_perms:
  args_err: |
    <b>Error: Command not specified!</b>

    Usage Example:
    <code>/reset_perms best_command</code>

  command_not_found: "❌ Error: The specified command was not found."
  settings_not_found: "ℹ️ No custom permission settings found for this command."
  ok: |
    ✅ Permissions reset successfully for command <code>{command}</code>!

set_role:
  args_err: |
    <b>Error: User or role not specified!</b>

    Usage Example:
    <code>/set_role @username <role_name></code>

    Where <role_name> is the desired role.

  reserved_role: "❌ Error: This role name is reserved and cannot be assigned."
  user_not_found: "❌ Error: The specified user was not found."
  ok: |
    ✅ Role updated for user <code>{user}</code>.
    New role: <code>{role}</code>

reset_role:
  args_err: |
    <b>Error: User not specified!</b>

    Usage Example:
    <code>/reset_role @username</code>

  user_not_found: "❌ Error: The specified user was not found."
  settings_not_found: "ℹ️ No custom role found for this user."
  ok: |
    ✅ Role reset successfully for user <code>{user}</code>!

perm_settings:
  args_err: |
    <b>Usage:</b>
    <code>/perms roles</code> (Show user roles)
    <code>/perms commands</code> (Show command permissions)

  perms_header: "\U0001F4C4 Custom Command Permissions:"
  roles_header: "\U0001F4C4 Custom User Roles:"
  no_perms: "ℹ️ No custom command permissions have been set."
  no_roles: "ℹ️ No custom user roles have been assigned."

load:
  args_err: |
    <b>Usage Example:</b>
    <code>/mod_load <ModuleName></code>

  load_err: |
    ❌ <b>Error loading module <code>{0}</code>!</b>
    Please check the logs for details.

  not_found: "❌ Module <code>{0}</code> not found!"
  already_loaded_err: "⚠️ Module <code>{0}</code> is already loaded."
  ok: "✅ Module <code>{0}</code> loaded successfully!"

unload:
  args_err: |
    <b>Usage Example:</b>
    <code>/mod_unload <ModuleName></code>

  not_loaded_err: "⚠️ Module <code>{0}</code> is not currently loaded."
  unload_core: "❌ Error: The <code>Core</code> module cannot be unloaded!"
  ok: "✅ Module <code>{0}</code> unloaded successfully!"

reload:
  args_err: |
    <b>Usage Example:</b>
    <code>/mod_reload <ModuleName></code>

  loading: |
    ⚙️ Reloading module <code>{0}</code>...
    Please wait.

  ok: "✅ Module <code>{0}</code> reloaded successfully!"

modules:
  list: "<b>Installed modules:</b>"
  next_btn: Next →
  prev_btn: ← Previous

module_page:
  invalid_module: ⚠️ Module is invalid. Please check its local files!
  name: "<b>Name:</b> {name}"
  author: "<b>Author:</b> {author}"
  version: "<b>Version:</b> {version}"
  src_url: "<b>Repository:</b> {url}"
  description: |
    <b>Description:</b>
    {description}
  updates_found: "🚀 Update available!"
  no_updates_found: "✅ Module is up-to-date."
  update_btn: Update 🚀
  delete_btn: Uninstall 🗑️
  back_btn: ← Back
  refresh_page_btn: Refresh 🔄
  refresh_page_err: |
    ❌ Failed to refresh page for {module_name}!
    The module might have been unloaded, or an unexpected error occurred.
  no_changes: No changes detected.
  unload_btn: Unload 🔌
  load_btn: Load 🔌
  reload_btn: Reload 🔄
  reload_ok: ✅ Module {module_name} reloaded successfully!
  auto_load: "<b>Auto-load:</b> {status}"
  enabled: Enabled
  disabled: Disabled
  enable_auto_load_btn: Enable Auto-load
  disable_auto_load_btn: Disable Auto-load
  auto_load_toggled: ✅ Auto-load {status}.
  auto_load_toggle_error: ❌ Failed to update auto-load setting.

backup:
  no_backups: "ℹ️ No backups found."
  no_backups_module: "ℹ️ No backups found for module <code>{name}</code>."
  list_module: "<b>Available backups for module <code>{name}</code>:</b>"
  view_backups_btn: View Backups 📂
  restore_btn: Restore 💾
  cleanup_btn: Cleanup Backups 🧹
  restore_latest_btn: Restore Latest 💾
  restoring: "⚙️ Restoring module <code>{name}</code> from selected backup..."
  restore_success: "✅ Module <code>{name}</code> successfully restored from backup."
  restore_failed: "❌ Failed to restore module <code>{name}</code> from backup."
  restore_canceled: |
    ⚠️ Backup restoration canceled for <code>{name}</code>.
    The module may be in an inconsistent state.
  restore_load_err: |
    ⚠️ Module <code>{name}</code> restored from backup, but failed to load afterwards.
    Error: <code>{backup}</code>
  cleanup_select_count: "Choose how many recent backups to keep for <code>{name}</code>:"
  back_btn: ← Back
  confirm_restore: "Are you sure you want to restore module <code>{name}</code> from backup <code>{backup}</code>?"
  all_except_latest: Keep only the latest
  cleanup_complete: "✅ Cleaned up {count} old backups for module <code>{name}</code>. Kept the {keep} most recent."
  invalid_backup: "❌ Error: Invalid backup selected."
  backup_failed: "❌ Backup failed for module <code>{name}</code>."
  creating_backup: "⚙️ Creating backup for module <code>{name}</code>..."
  backup_created: |
    ✅ Backup created successfully.
    Path: <code>{path}</code>
